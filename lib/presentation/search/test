import 'package:cloud_firestore/cloud_firestore.dart';
import 'package:flutter/material.dart';
import 'package:get/get.dart';
import 'package:turing/core/utils/styles.dart';
import '../../controllers/search_controller.dart';

class Search extends StatefulWidget {
  const Search({Key? key}) : super(key: key);

  @override
  State<Search> createState() => _SearchState();
}

class _SearchState extends State<Search> {
  final TextEditingController searchController = TextEditingController();
  late QuerySnapshot snapshotData;
  bool isExecuted = false;
  //
  // // Initial Selected Value
  // String dropDownValue = 'Articles';
  //
  // // List of items in our dropdown menu
  // var items = [
  //   'Articles',
  //   'Communities',
  //   'Rooms',
  //   'Users',
  // ];
  @override
  Widget build(BuildContext context) {

    Widget searchedData(){

      return ListView.builder(
              itemCount: snapshotData.docs.length,
              itemBuilder: (context, index) {
                return ListTile(
                  leading: CircleAvatar(
                    backgroundImage: NetworkImage(snapshotData.docs[index]['photoUrl']),
                  ),
                  title: Text(
                    snapshotData.docs[index]['title'],
                    style: TextStyle(
                      color: kPrimaryColor,
                      fontWeight: FontWeight.w600,
                      fontSize: 20.0,
                    ),
                  ),
                  subtitle: Text(
                    snapshotData.docs[index]['desc'],
                    style: TextStyle(
                      color: kPrimaryColor,
                      fontWeight: FontWeight.w600,
                      fontSize: 12.0,
                    ),
                  ),
                );
              });
    }
    // var searchFilter;
    // switch(dropDownValue) {
    //   case 'Articles':
    //     searchFilter = SearchController.instance.articleData(searchController.text).then((value) {
    //       snapshotData = value;
    //     });
    //     print(searchFilter);
    //     break;
    //   case 'Communities':
    //     searchFilter =SearchController.instance.communitiesData(searchController.text).then((value) {
    //       snapshotData = value;
    //     });
    //     print(searchFilter);
    //     break;
    //   case 'Rooms':
    //     searchFilter =SearchController.instance.roomData(searchController.text).then((value) {
    //       snapshotData = value;
    //     });
    //     print(searchFilter);
    //     break;
    //   case 'Users':
    //     searchFilter =SearchController.instance.usersData(searchController.text).then((value) {
    //       snapshotData = value;
    //     });
    //     print(searchFilter);
    //     break;
    //   default:
    //     searchFilter =SearchController.instance.articleData(searchController.text).then((value) {
    //       snapshotData = value;
    //     });
    // }
    return Scaffold(

      backgroundColor: kLightColor,
      floatingActionButton: FloatingActionButton(
        backgroundColor: kPrimaryColor,
        child: Icon(
            Icons.clear,
          color: kLightColor,
        ),
        onPressed: (){
          setState(() {
            isExecuted = false;
            searchController.clear();
          });
        },
      ),
      appBar: AppBar(
        backgroundColor: kLightColor.withOpacity(0.5),
        elevation: 0.6,
        leading: IconButton(
          icon: Icon(
            Icons.arrow_back_ios,
          ),
          onPressed: (){
            Get.back();
          },
        ),
        actions: [
          // DropdownButton(
          //   elevation: 0,
          //   isDense: false,
          //   dropdownColor: kForegroundColor,
          //   // Down Arrow Icon
          //   icon: Visibility (visible:false, child: Icon(Icons.arrow_downward)),
          //   iconSize: 0.0,
          //   // Initial Value
          //   value: dropDownValue,
          //   // Array list of items
          //   items: items.map((String items) {
          //     return DropdownMenuItem(
          //       value: items,
          //       child: Text(items),
          //     );
          //   }).toList(),
          //   // After selecting the desired option,it will
          //   // change button value to selected value
          //   onChanged: (String? newValue) {
          //
          //     setState(() {
          //       dropDownValue = newValue!;
          //     });
          //   },
          // ),
          GetBuilder<SearchController>(
              init: SearchController(),
              builder: (val) {
                return IconButton(
                  icon: const Icon(Icons.search),
                  onPressed: () {
                    val.communitiesData(searchController.text).then((value) {
                      snapshotData = value;
                    });
                    setState(() {
                      isExecuted = true;
                    });

                  },
                );
              }),
        ],
        title: TextField(
          controller: searchController,
          style: TextStyle(
            color: kPrimaryColor,
          ),
          decoration: InputDecoration(
            hintText: 'Search',
            border: OutlineInputBorder(
              borderSide: BorderSide(
                color: Colors.transparent,
              ),
            ),
            enabledBorder: OutlineInputBorder(
              borderRadius: const BorderRadius.all(
                Radius.circular(4),
              ),
              borderSide: BorderSide(
                color: Colors.transparent,
              ),
            ),
            focusedBorder: OutlineInputBorder(
              borderRadius: const BorderRadius.all(
                Radius.circular(4),
              ),
              borderSide: BorderSide(
                color: Colors.transparent,
              ),
            ),
          ),
        ),
      ),
      body: isExecuted ? searchedData() : Container(
        child: Center(
          child: Text(
            'Search any thing',
            style: TextStyle(
                color: kPrimaryColor,
                fontSize: 30.0
            ),
          ),
        ),
      )
    );

  }

}
